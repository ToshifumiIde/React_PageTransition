[{"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/AuthService.js":"1","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/App.jsx":"2","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/Main.jsx":"3","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/SignUp.jsx":"4","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/LoggedInRoute.js":"5","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/Login.jsx":"6","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/LoggedinRoute.js":"7","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/index.jsx":"8","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/Post.jsx":"9","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/config/firebase.js":"10","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/Display.jsx":"11"},{"size":604,"mtime":1613295936643,"results":"12","hashOfConfig":"13"},{"size":874,"mtime":1613294684292,"results":"14","hashOfConfig":"13"},{"size":3651,"mtime":1614904352008,"results":"15","hashOfConfig":"13"},{"size":5576,"mtime":1614944029739,"results":"16","hashOfConfig":"13"},{"size":430,"mtime":1609660216806,"results":"17","hashOfConfig":"13"},{"size":5937,"mtime":1614904602614,"results":"18","hashOfConfig":"13"},{"size":577,"mtime":1609633178795,"results":"19","hashOfConfig":"20"},{"size":161,"mtime":1613282394276,"results":"21","hashOfConfig":"13"},{"size":4181,"mtime":1614904128735,"results":"22","hashOfConfig":"13"},{"size":1312,"mtime":1613295955383,"results":"23","hashOfConfig":"13"},{"size":701,"mtime":1614864458341,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"121jc5p",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xs4snh",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/AuthService.js",[],["50","51"],"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/App.jsx",[],["52","53"],"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/Main.jsx",[],"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/SignUp.jsx",[],"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/LoggedInRoute.js",[],"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/Login.jsx",[],"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/LoggedinRoute.js",[],"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/index.jsx",[],"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/Post.jsx",["54","55"],"import React, { useState, useContext, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport { db } from \"../config/firebase\";\nimport { AuthContext } from \"../AuthService\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"./Post.module.css\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"#eee\",\n  },\n  messageList: {\n    listStyle: \"none\",\n  },\n});\n\nexport const Post = ({ history }) => {\n  const classes = useStyles();\n  const user = useContext(AuthContext);\n  const [title, setTitle] = useState(\"\");\n  const [interviewee, setInterviewee] = useState(\"\");\n  const [conclusion, setConclusion] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [interviewDay, setInterviewDay] = useState(new Date());\n  const [startTime, setStartTime] = useState(\"\");\n  const [finishedTime, setFinishedTime] = useState(\"\");\n  const resetPost = () => {\n    setTitle(\"\");\n    setInterviewee(\"\");\n    setConclusion(\"\");\n    setValue(\"\");\n    setStartTime(\"\");\n    setFinishedTime(\"\");\n    setInterviewDay(new Date());\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return alert(\"投稿内容を入力してください\");\n    db.collection(\"messages\").add({\n      user: user.displayName,\n      title: title,\n      interviewee: interviewee,\n      conclusion: conclusion,\n      content: value,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      interviewDay: interviewDay,\n      startTime: startTime,\n      finishedTime: finishedTime,\n    });\n    resetPost();\n  };\n\n  useEffect(() => {\n    console.log(interviewDay);\n  }, [interviewDay]);\n\n  return (\n    <>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <label htmlFor=\"title\">投稿タイトル</label>\n        <input\n          autoFocus\n          id=\"title\"\n          placeholder=\"◯◯商談見積提示など\"\n          required\n          type=\"text\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        />\n        <label htmlFor=\"interviewee\">面談者</label>\n        <input\n          id=\"interviewee\"\n          placeholder=\"◯◯社長など\"\n          required\n          type=\"text\"\n          value={interviewee}\n          onChange={(e) => {\n            setInterviewee(e.target.value);\n          }}\n        />\n        <label htmlFor=\"conclusion\">結論</label>\n        <input\n          id=\"conclusion\"\n          required\n          type=\"text\"\n          value={conclusion}\n          onChange={(e) => {\n            setConclusion(e.target.value);\n          }}\n        />\n        <label htmlFor=\"text\">詳細</label>\n        <textarea\n          cols=\"40\"\n          id=\"text\"\n          type=\"text\"\n          rows=\"4\"\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n        ></textarea>\n        <label htmlFor=\"time\">面談日時</label>\n        <DatePicker\n          animateYearScrolling\n          disableToolbar\n          format=\"YYYY年M月D日\"\n          onChange={(e) => {\n            setInterviewDay(new Date(e));\n          }}\n          value={interviewDay}\n          valiant=\"inline\"\n        />\n        <input\n          id=\"time\"\n          required\n          step=\"900\"\n          type=\"time\"\n          value={startTime}\n          onChange={(e) => {\n            setStartTime(e.target.value);\n          }}\n        />\n        〜\n        <input\n          id=\"time\"\n          required\n          type=\"time\"\n          value={finishedTime}\n          step=\"900\"\n          onChange={(e) => {\n            setFinishedTime(e.target.value);\n          }}\n        />\n        {/* <button type=\"submit\" disabled={!title || !interviewee || !conclusion}>\n          送信\n        </button> */}\n        <button\n          color=\"primary\"\n          disabled={!title || !interviewee || !conclusion}\n          className={styles.post_button}\n        >\n          送信\n          <SendIcon className={styles.post_sendIcon} />\n        </button>\n      </form>\n    </>\n  );\n};\n","/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/config/firebase.js",[],"/Users/idetoshifumi/Desktop/React-PageTransition/pagetransition/src/components/Display.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":14},{"ruleId":"62","severity":1,"message":"66","line":21,"column":9,"nodeType":"64","messageId":"65","endLine":21,"endColumn":16},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],["67"],["68"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]